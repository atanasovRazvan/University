// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: festival.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace NetworkingGrpc {

  /// <summary>Holder for reflection information generated from festival.proto</summary>
  public static partial class FestivalReflection {

    #region Descriptor
    /// <summary>File descriptor for festival.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FestivalReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5mZXN0aXZhbC5wcm90bxIIZmVzdGl2YWwiKgoEVXNlchIQCgh1c2VybmFt",
            "ZRgBIAEoCRIQCghwYXNzd29yZBgCIAEoCSJ6CglTcGVjdGFjb2wSCgoCaWQY",
            "ASABKAUSDAoEZGF0ZRgCIAEoCRILCgNsb2MYAyABKAkSDgoGYXJ0aXN0GAQg",
            "ASgJEgsKA29yYRgFIAEoCRISCgpsb2N1cmlEaXNwGAYgASgFEhUKDWxvY3Vy",
            "aVZhbmR1dGUYByABKAUiUgoFQmlsZXQSCgoCaWQYASABKAUSEwoLc3BlY3Rh",
            "Y29sSWQYAiABKAUSFgoObnVtZUN1bXBhcmF0b3IYAyABKAkSEAoIbnJMb2N1",
            "cmkYBCABKAUiEgoQU3Vic2NyaWJlUmVxdWVzdCIsCgxMb2dpblJlcXVlc3QS",
            "HAoEdXNlchgBIAEoCzIOLmZlc3RpdmFsLlVzZXIi3wEKC1NlcnZlclJlcGx5",
            "Eg4KBmxvZ2dlZBgBIAEoCBINCgVzYXZlZBgCIAEoCBImCglzcGVjdGFjb2wY",
            "AyABKAsyEy5mZXN0aXZhbC5TcGVjdGFjb2wSKgoNYWxsU3BlY3RhY29sZRgE",
            "IAMoCzITLmZlc3RpdmFsLlNwZWN0YWNvbBIwChNhbGxTcGVjdGFjb2xlQnlE",
            "YXRlGAUgAygLMhMuZmVzdGl2YWwuU3BlY3RhY29sEisKDnNwZWN0YWNvbEZv",
            "dW5kGAYgASgLMhMuZmVzdGl2YWwuU3BlY3RhY29sIjIKEFNhdmVCaWxldFJl",
            "cXVlc3QSHgoFYmlsZXQYASABKAsyDy5mZXN0aXZhbC5CaWxldCIPCg1HZXRB",
            "bGxSZXF1ZXN0IiMKE0dldEFsbEJ5RGF0ZVJlcXVlc3QSDAoEZGF0ZRgBIAEo",
            "CSIrChRGaW5kU3BlY3RhY29sUmVxdWVzdBITCgtzcGVjdGFjb2xJZBgBIAEo",
            "BTKyAwoPRmVzdGl2YWxTZXJ2aWNlEkIKCXN1YnNjcmliZRIaLmZlc3RpdmFs",
            "LlN1YnNjcmliZVJlcXVlc3QaFS5mZXN0aXZhbC5TZXJ2ZXJSZXBseSIAMAES",
            "OAoFbG9naW4SFi5mZXN0aXZhbC5Mb2dpblJlcXVlc3QaFS5mZXN0aXZhbC5T",
            "ZXJ2ZXJSZXBseSIAEkQKCXNhdmVCaWxldBIaLmZlc3RpdmFsLlNhdmVCaWxl",
            "dFJlcXVlc3QaFS5mZXN0aXZhbC5TZXJ2ZXJSZXBseSIAKAEwARJICg1maW5k",
            "U3BlY3RhY29sEh4uZmVzdGl2YWwuRmluZFNwZWN0YWNvbFJlcXVlc3QaFS5m",
            "ZXN0aXZhbC5TZXJ2ZXJSZXBseSIAEkMKD2dldEFsbFNwZWN0YWNvbBIXLmZl",
            "c3RpdmFsLkdldEFsbFJlcXVlc3QaFS5mZXN0aXZhbC5TZXJ2ZXJSZXBseSIA",
            "EkwKEmdldFNwZWN0YWNvbEJ5RGF0ZRIdLmZlc3RpdmFsLkdldEFsbEJ5RGF0",
            "ZVJlcXVlc3QaFS5mZXN0aXZhbC5TZXJ2ZXJSZXBseSIAQhGqAg5OZXR3b3Jr",
            "aW5nR3JwY2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.User), global::NetworkingGrpc.User.Parser, new[]{ "Username", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.Spectacol), global::NetworkingGrpc.Spectacol.Parser, new[]{ "Id", "Date", "Loc", "Artist", "Ora", "LocuriDisp", "LocuriVandute" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.Bilet), global::NetworkingGrpc.Bilet.Parser, new[]{ "Id", "SpectacolId", "NumeCumparator", "NrLocuri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.SubscribeRequest), global::NetworkingGrpc.SubscribeRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.LoginRequest), global::NetworkingGrpc.LoginRequest.Parser, new[]{ "User" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.ServerReply), global::NetworkingGrpc.ServerReply.Parser, new[]{ "Logged", "Saved", "Spectacol", "AllSpectacole", "AllSpectacoleByDate", "SpectacolFound" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.SaveBiletRequest), global::NetworkingGrpc.SaveBiletRequest.Parser, new[]{ "Bilet" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.GetAllRequest), global::NetworkingGrpc.GetAllRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.GetAllByDateRequest), global::NetworkingGrpc.GetAllByDateRequest.Parser, new[]{ "Date" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::NetworkingGrpc.FindSpectacolRequest), global::NetworkingGrpc.FindSpectacolRequest.Parser, new[]{ "SpectacolId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      username_ = other.username_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "username" field.</summary>
    public const int UsernameFieldNumber = 1;
    private string username_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Username {
      get { return username_; }
      set {
        username_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Username != other.Username) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Username.Length != 0) hash ^= Username.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Username.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Username);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Username.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Username);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Username.Length != 0) {
        Username = other.Username;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Username = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Spectacol : pb::IMessage<Spectacol> {
    private static readonly pb::MessageParser<Spectacol> _parser = new pb::MessageParser<Spectacol>(() => new Spectacol());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Spectacol> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectacol() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectacol(Spectacol other) : this() {
      id_ = other.id_;
      date_ = other.date_;
      loc_ = other.loc_;
      artist_ = other.artist_;
      ora_ = other.ora_;
      locuriDisp_ = other.locuriDisp_;
      locuriVandute_ = other.locuriVandute_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Spectacol Clone() {
      return new Spectacol(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 2;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "loc" field.</summary>
    public const int LocFieldNumber = 3;
    private string loc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Loc {
      get { return loc_; }
      set {
        loc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "artist" field.</summary>
    public const int ArtistFieldNumber = 4;
    private string artist_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Artist {
      get { return artist_; }
      set {
        artist_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ora" field.</summary>
    public const int OraFieldNumber = 5;
    private string ora_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Ora {
      get { return ora_; }
      set {
        ora_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "locuriDisp" field.</summary>
    public const int LocuriDispFieldNumber = 6;
    private int locuriDisp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocuriDisp {
      get { return locuriDisp_; }
      set {
        locuriDisp_ = value;
      }
    }

    /// <summary>Field number for the "locuriVandute" field.</summary>
    public const int LocuriVanduteFieldNumber = 7;
    private int locuriVandute_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LocuriVandute {
      get { return locuriVandute_; }
      set {
        locuriVandute_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Spectacol);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Spectacol other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Date != other.Date) return false;
      if (Loc != other.Loc) return false;
      if (Artist != other.Artist) return false;
      if (Ora != other.Ora) return false;
      if (LocuriDisp != other.LocuriDisp) return false;
      if (LocuriVandute != other.LocuriVandute) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (Loc.Length != 0) hash ^= Loc.GetHashCode();
      if (Artist.Length != 0) hash ^= Artist.GetHashCode();
      if (Ora.Length != 0) hash ^= Ora.GetHashCode();
      if (LocuriDisp != 0) hash ^= LocuriDisp.GetHashCode();
      if (LocuriVandute != 0) hash ^= LocuriVandute.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Date.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Date);
      }
      if (Loc.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Loc);
      }
      if (Artist.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Artist);
      }
      if (Ora.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Ora);
      }
      if (LocuriDisp != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(LocuriDisp);
      }
      if (LocuriVandute != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(LocuriVandute);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (Loc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Loc);
      }
      if (Artist.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Artist);
      }
      if (Ora.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Ora);
      }
      if (LocuriDisp != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocuriDisp);
      }
      if (LocuriVandute != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LocuriVandute);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Spectacol other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      if (other.Loc.Length != 0) {
        Loc = other.Loc;
      }
      if (other.Artist.Length != 0) {
        Artist = other.Artist;
      }
      if (other.Ora.Length != 0) {
        Ora = other.Ora;
      }
      if (other.LocuriDisp != 0) {
        LocuriDisp = other.LocuriDisp;
      }
      if (other.LocuriVandute != 0) {
        LocuriVandute = other.LocuriVandute;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Date = input.ReadString();
            break;
          }
          case 26: {
            Loc = input.ReadString();
            break;
          }
          case 34: {
            Artist = input.ReadString();
            break;
          }
          case 42: {
            Ora = input.ReadString();
            break;
          }
          case 48: {
            LocuriDisp = input.ReadInt32();
            break;
          }
          case 56: {
            LocuriVandute = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Bilet : pb::IMessage<Bilet> {
    private static readonly pb::MessageParser<Bilet> _parser = new pb::MessageParser<Bilet>(() => new Bilet());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Bilet> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bilet() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bilet(Bilet other) : this() {
      id_ = other.id_;
      spectacolId_ = other.spectacolId_;
      numeCumparator_ = other.numeCumparator_;
      nrLocuri_ = other.nrLocuri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Bilet Clone() {
      return new Bilet(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "spectacolId" field.</summary>
    public const int SpectacolIdFieldNumber = 2;
    private int spectacolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpectacolId {
      get { return spectacolId_; }
      set {
        spectacolId_ = value;
      }
    }

    /// <summary>Field number for the "numeCumparator" field.</summary>
    public const int NumeCumparatorFieldNumber = 3;
    private string numeCumparator_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NumeCumparator {
      get { return numeCumparator_; }
      set {
        numeCumparator_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nrLocuri" field.</summary>
    public const int NrLocuriFieldNumber = 4;
    private int nrLocuri_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NrLocuri {
      get { return nrLocuri_; }
      set {
        nrLocuri_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Bilet);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Bilet other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (SpectacolId != other.SpectacolId) return false;
      if (NumeCumparator != other.NumeCumparator) return false;
      if (NrLocuri != other.NrLocuri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (SpectacolId != 0) hash ^= SpectacolId.GetHashCode();
      if (NumeCumparator.Length != 0) hash ^= NumeCumparator.GetHashCode();
      if (NrLocuri != 0) hash ^= NrLocuri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (SpectacolId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(SpectacolId);
      }
      if (NumeCumparator.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(NumeCumparator);
      }
      if (NrLocuri != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(NrLocuri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (SpectacolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpectacolId);
      }
      if (NumeCumparator.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NumeCumparator);
      }
      if (NrLocuri != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NrLocuri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Bilet other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.SpectacolId != 0) {
        SpectacolId = other.SpectacolId;
      }
      if (other.NumeCumparator.Length != 0) {
        NumeCumparator = other.NumeCumparator;
      }
      if (other.NrLocuri != 0) {
        NrLocuri = other.NrLocuri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            SpectacolId = input.ReadInt32();
            break;
          }
          case 26: {
            NumeCumparator = input.ReadString();
            break;
          }
          case 32: {
            NrLocuri = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SubscribeRequest : pb::IMessage<SubscribeRequest> {
    private static readonly pb::MessageParser<SubscribeRequest> _parser = new pb::MessageParser<SubscribeRequest>(() => new SubscribeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SubscribeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest(SubscribeRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubscribeRequest Clone() {
      return new SubscribeRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SubscribeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SubscribeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SubscribeRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class LoginRequest : pb::IMessage<LoginRequest> {
    private static readonly pb::MessageParser<LoginRequest> _parser = new pb::MessageParser<LoginRequest>(() => new LoginRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest(LoginRequest other) : this() {
      user_ = other.user_ != null ? other.user_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequest Clone() {
      return new LoginRequest(this);
    }

    /// <summary>Field number for the "user" field.</summary>
    public const int UserFieldNumber = 1;
    private global::NetworkingGrpc.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkingGrpc.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(User, other.User)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (user_ != null) hash ^= User.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (user_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(User);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (user_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequest other) {
      if (other == null) {
        return;
      }
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::NetworkingGrpc.User();
        }
        User.MergeFrom(other.User);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (user_ == null) {
              User = new global::NetworkingGrpc.User();
            }
            input.ReadMessage(User);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// reply folosit pentru functiile de login si adaugare bilet
  /// pentru a inregistra observerii in login
  /// </summary>
  public sealed partial class ServerReply : pb::IMessage<ServerReply> {
    private static readonly pb::MessageParser<ServerReply> _parser = new pb::MessageParser<ServerReply>(() => new ServerReply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ServerReply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerReply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerReply(ServerReply other) : this() {
      logged_ = other.logged_;
      saved_ = other.saved_;
      spectacol_ = other.spectacol_ != null ? other.spectacol_.Clone() : null;
      allSpectacole_ = other.allSpectacole_.Clone();
      allSpectacoleByDate_ = other.allSpectacoleByDate_.Clone();
      spectacolFound_ = other.spectacolFound_ != null ? other.spectacolFound_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ServerReply Clone() {
      return new ServerReply(this);
    }

    /// <summary>Field number for the "logged" field.</summary>
    public const int LoggedFieldNumber = 1;
    private bool logged_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Logged {
      get { return logged_; }
      set {
        logged_ = value;
      }
    }

    /// <summary>Field number for the "saved" field.</summary>
    public const int SavedFieldNumber = 2;
    private bool saved_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Saved {
      get { return saved_; }
      set {
        saved_ = value;
      }
    }

    /// <summary>Field number for the "spectacol" field.</summary>
    public const int SpectacolFieldNumber = 3;
    private global::NetworkingGrpc.Spectacol spectacol_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkingGrpc.Spectacol Spectacol {
      get { return spectacol_; }
      set {
        spectacol_ = value;
      }
    }

    /// <summary>Field number for the "allSpectacole" field.</summary>
    public const int AllSpectacoleFieldNumber = 4;
    private static readonly pb::FieldCodec<global::NetworkingGrpc.Spectacol> _repeated_allSpectacole_codec
        = pb::FieldCodec.ForMessage(34, global::NetworkingGrpc.Spectacol.Parser);
    private readonly pbc::RepeatedField<global::NetworkingGrpc.Spectacol> allSpectacole_ = new pbc::RepeatedField<global::NetworkingGrpc.Spectacol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NetworkingGrpc.Spectacol> AllSpectacole {
      get { return allSpectacole_; }
    }

    /// <summary>Field number for the "allSpectacoleByDate" field.</summary>
    public const int AllSpectacoleByDateFieldNumber = 5;
    private static readonly pb::FieldCodec<global::NetworkingGrpc.Spectacol> _repeated_allSpectacoleByDate_codec
        = pb::FieldCodec.ForMessage(42, global::NetworkingGrpc.Spectacol.Parser);
    private readonly pbc::RepeatedField<global::NetworkingGrpc.Spectacol> allSpectacoleByDate_ = new pbc::RepeatedField<global::NetworkingGrpc.Spectacol>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::NetworkingGrpc.Spectacol> AllSpectacoleByDate {
      get { return allSpectacoleByDate_; }
    }

    /// <summary>Field number for the "spectacolFound" field.</summary>
    public const int SpectacolFoundFieldNumber = 6;
    private global::NetworkingGrpc.Spectacol spectacolFound_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkingGrpc.Spectacol SpectacolFound {
      get { return spectacolFound_; }
      set {
        spectacolFound_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ServerReply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ServerReply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Logged != other.Logged) return false;
      if (Saved != other.Saved) return false;
      if (!object.Equals(Spectacol, other.Spectacol)) return false;
      if(!allSpectacole_.Equals(other.allSpectacole_)) return false;
      if(!allSpectacoleByDate_.Equals(other.allSpectacoleByDate_)) return false;
      if (!object.Equals(SpectacolFound, other.SpectacolFound)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Logged != false) hash ^= Logged.GetHashCode();
      if (Saved != false) hash ^= Saved.GetHashCode();
      if (spectacol_ != null) hash ^= Spectacol.GetHashCode();
      hash ^= allSpectacole_.GetHashCode();
      hash ^= allSpectacoleByDate_.GetHashCode();
      if (spectacolFound_ != null) hash ^= SpectacolFound.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Logged != false) {
        output.WriteRawTag(8);
        output.WriteBool(Logged);
      }
      if (Saved != false) {
        output.WriteRawTag(16);
        output.WriteBool(Saved);
      }
      if (spectacol_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Spectacol);
      }
      allSpectacole_.WriteTo(output, _repeated_allSpectacole_codec);
      allSpectacoleByDate_.WriteTo(output, _repeated_allSpectacoleByDate_codec);
      if (spectacolFound_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(SpectacolFound);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Logged != false) {
        size += 1 + 1;
      }
      if (Saved != false) {
        size += 1 + 1;
      }
      if (spectacol_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Spectacol);
      }
      size += allSpectacole_.CalculateSize(_repeated_allSpectacole_codec);
      size += allSpectacoleByDate_.CalculateSize(_repeated_allSpectacoleByDate_codec);
      if (spectacolFound_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SpectacolFound);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ServerReply other) {
      if (other == null) {
        return;
      }
      if (other.Logged != false) {
        Logged = other.Logged;
      }
      if (other.Saved != false) {
        Saved = other.Saved;
      }
      if (other.spectacol_ != null) {
        if (spectacol_ == null) {
          Spectacol = new global::NetworkingGrpc.Spectacol();
        }
        Spectacol.MergeFrom(other.Spectacol);
      }
      allSpectacole_.Add(other.allSpectacole_);
      allSpectacoleByDate_.Add(other.allSpectacoleByDate_);
      if (other.spectacolFound_ != null) {
        if (spectacolFound_ == null) {
          SpectacolFound = new global::NetworkingGrpc.Spectacol();
        }
        SpectacolFound.MergeFrom(other.SpectacolFound);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Logged = input.ReadBool();
            break;
          }
          case 16: {
            Saved = input.ReadBool();
            break;
          }
          case 26: {
            if (spectacol_ == null) {
              Spectacol = new global::NetworkingGrpc.Spectacol();
            }
            input.ReadMessage(Spectacol);
            break;
          }
          case 34: {
            allSpectacole_.AddEntriesFrom(input, _repeated_allSpectacole_codec);
            break;
          }
          case 42: {
            allSpectacoleByDate_.AddEntriesFrom(input, _repeated_allSpectacoleByDate_codec);
            break;
          }
          case 50: {
            if (spectacolFound_ == null) {
              SpectacolFound = new global::NetworkingGrpc.Spectacol();
            }
            input.ReadMessage(SpectacolFound);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SaveBiletRequest : pb::IMessage<SaveBiletRequest> {
    private static readonly pb::MessageParser<SaveBiletRequest> _parser = new pb::MessageParser<SaveBiletRequest>(() => new SaveBiletRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SaveBiletRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveBiletRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveBiletRequest(SaveBiletRequest other) : this() {
      bilet_ = other.bilet_ != null ? other.bilet_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SaveBiletRequest Clone() {
      return new SaveBiletRequest(this);
    }

    /// <summary>Field number for the "bilet" field.</summary>
    public const int BiletFieldNumber = 1;
    private global::NetworkingGrpc.Bilet bilet_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::NetworkingGrpc.Bilet Bilet {
      get { return bilet_; }
      set {
        bilet_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SaveBiletRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SaveBiletRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Bilet, other.Bilet)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (bilet_ != null) hash ^= Bilet.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (bilet_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Bilet);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (bilet_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Bilet);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SaveBiletRequest other) {
      if (other == null) {
        return;
      }
      if (other.bilet_ != null) {
        if (bilet_ == null) {
          Bilet = new global::NetworkingGrpc.Bilet();
        }
        Bilet.MergeFrom(other.Bilet);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (bilet_ == null) {
              Bilet = new global::NetworkingGrpc.Bilet();
            }
            input.ReadMessage(Bilet);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAllRequest : pb::IMessage<GetAllRequest> {
    private static readonly pb::MessageParser<GetAllRequest> _parser = new pb::MessageParser<GetAllRequest>(() => new GetAllRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllRequest(GetAllRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllRequest Clone() {
      return new GetAllRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetAllByDateRequest : pb::IMessage<GetAllByDateRequest> {
    private static readonly pb::MessageParser<GetAllByDateRequest> _parser = new pb::MessageParser<GetAllByDateRequest>(() => new GetAllByDateRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAllByDateRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllByDateRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllByDateRequest(GetAllByDateRequest other) : this() {
      date_ = other.date_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAllByDateRequest Clone() {
      return new GetAllByDateRequest(this);
    }

    /// <summary>Field number for the "date" field.</summary>
    public const int DateFieldNumber = 1;
    private string date_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Date {
      get { return date_; }
      set {
        date_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAllByDateRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAllByDateRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Date != other.Date) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Date.Length != 0) hash ^= Date.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Date.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Date);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Date.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Date);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAllByDateRequest other) {
      if (other == null) {
        return;
      }
      if (other.Date.Length != 0) {
        Date = other.Date;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Date = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class FindSpectacolRequest : pb::IMessage<FindSpectacolRequest> {
    private static readonly pb::MessageParser<FindSpectacolRequest> _parser = new pb::MessageParser<FindSpectacolRequest>(() => new FindSpectacolRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FindSpectacolRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::NetworkingGrpc.FestivalReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindSpectacolRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindSpectacolRequest(FindSpectacolRequest other) : this() {
      spectacolId_ = other.spectacolId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FindSpectacolRequest Clone() {
      return new FindSpectacolRequest(this);
    }

    /// <summary>Field number for the "spectacolId" field.</summary>
    public const int SpectacolIdFieldNumber = 1;
    private int spectacolId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int SpectacolId {
      get { return spectacolId_; }
      set {
        spectacolId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FindSpectacolRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FindSpectacolRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (SpectacolId != other.SpectacolId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (SpectacolId != 0) hash ^= SpectacolId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (SpectacolId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(SpectacolId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (SpectacolId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(SpectacolId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FindSpectacolRequest other) {
      if (other == null) {
        return;
      }
      if (other.SpectacolId != 0) {
        SpectacolId = other.SpectacolId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            SpectacolId = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
